{:deps {lread/status-line {:git/url "https://github.com/lread/status-line.git"
                           :sha "35ed39645038e81b42cb15ed6753b8462e60a06d"}}

 :tasks {:requires ([clojure.string :as string]
                    [lread.status-line :as status]
                    [babashka.fs :as fs])
         :enter (let [{:keys [name]} (current-task)]
                  (status/line :head "TASK %s %s" name (string/join " " *command-line-args*)))
         :leave (let [{:keys [name]} (current-task)]
                  (status/line :detail "\nTASK %s done." name))

         -staging-dir (fs/path "_STAGING")
         -cljs-dir (fs/path -staging-dir "cljs-out")

         -clean {:task (shell "lein clean")}

         -lein-build (do (run '-clean)
                         (shell "lein fig:ws"))

         stage {:depends [-staging-dir -cljs-dir -lein-build]
                :task (do (fs/delete-tree -staging-dir)
                          (fs/create-dir -staging-dir)
                          (doseq [f (fs/list-dir (fs/path "resources" "public"))
                                  :let [basename (fs/file-name f)]]
                            (fs/copy-tree f (fs/path -staging-dir basename)))
                          (fs/copy-tree (fs/path "target" "public" "cljs-out")
                                        (fs/path -staging-dir "cljs-out"))
                          (run '-clean))
                }
         }
 }
